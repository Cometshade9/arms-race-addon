// note from trplnr: please dont use glitch or github.com's text editor
// use https://github.dev/Taureon/aps-plus-plus-addons/blob/main/armsRace.js if you dont plan on getting a code editor
// im telling u this bcuz syntax errors

// use camelCase - zenphia
// use camelCase - zenphia
// use camelCase - zenphia

// KEEP THE STYLE CONSISTENT
// IF YOU COPY-PASTED CODE WITH DIFFERENT FORMATTING, CHANGE IT TO MAKE IT ABIDE BY THE FORMATTING
// THIS IS IMPORTANT TO KEEP THE CODE SMALL
//i cant fix please help someone!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! please. (everything is messed up)
const { dereference, combineStats, addBackGunner, makeAuto, makeHybrid } = require('../facilitators.js');
const { base, gunCalcNames, statnames, smshskl } = require('../constants.js');
const g = require('../gunvals.js');

let greekNumbers = ',Double ,Triple ,Quad ,Penta ,Hexa ,Septa ,Octo ,Nona ,Deca ,Undeca ,Dodeca ,Trideca ,Tetradeca ,Pentadeca ,Hexadeca ,Heptadeca ,Octadeca ,Nonadeca ,Icosa ,Henicosa ,Docosa ,Tricosa ,Triaconta ,Hentriaconta '.split(','),
makeMulti = (type, count, name = -1, startRotation = 0) => {
    let output = dereference(type),
        shootyBois = output.GUNS,
        fraction = 360 / count;
    output.GUNS = [];
    for (let gun of type.GUNS) {
        for (let i = 0; i < count; i++) {
            let newgun = dereference(gun);
            newgun.POSITION[5] += startRotation + fraction * i;
            if (gun.PROPERTIES) newgun.PROPERTIES.TYPE = gun.PROPERTIES.TYPE;
            output.GUNS.push(newgun);
        };
    }
    output.LABEL = name == -1 ? (greekNumbers[count - 1] || (count + ' ')) + type.LABEL : name;
    return output;
},

makeBird = (type, name = -1, color) => {
    let output = dereference(type),
        shootyBois = [{
            POSITION: [16, 8, 1, 0, 0, 150, 0.1],
            PROPERTIES: { SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.halfrecoil]), TYPE: "bullet", LABEL: gunCalcNames.thruster }
        },{
            POSITION: [16, 8, 1, 0, 0, 210, 0.1],
            PROPERTIES: { SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.halfrecoil]), TYPE: "bullet", LABEL: gunCalcNames.thruster }
        },{
            POSITION: [18, 8, 1, 0, 0, 180, 0.6],
            PROPERTIES: { SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.halfrecoil]), TYPE: "bullet", LABEL: gunCalcNames.thruster }
        }];
    if (color) for (let i = 0; i < 3; i++) shootyBois[i].PROPERTIES.TYPE = [shootyBois[i].PROPERTIES.TYPE, { COLOR: color, KEEP_OWN_COLOR: true }];
    for (let i in output.GUNS) if (output.GUNS[i].PROPERTIES) output.GUNS[i].PROPERTIES.ALT_FIRE = true;
    if (output.FACING_TYPE == "locksFacing") output.FACING_TYPE = "toTarget";
    output.GUNS = type.GUNS == null ? [...shootyBois] : [...output.GUNS, ...shootyBois];
    output.LABEL = name == -1 ? "Bird " + type.LABEL : name;
    return output;
};

module.exports = ({ Class }) => {




    // Comment out the line below to enable this addon, uncomment it to disable this addon (WARNING: Increases load time by approximately 2x).
	//return console.log('--- Arms Race addon [armsRace.js] is disabled. See lines 60-61 to enable it. ---');
    //needed turrets
    Class.megaAutoTurret = {
        PARENT: "genericTank",
        LABEL: "",
        BODY: { FOV: 2, SPEED: 0.9 },
        CONTROLLERS: ["canRepel", "onlyAcceptInArc", "mapAltToFire", "nearestDifferentMaster"],
        COLOR: 16,
        GUNS: [{
            POSITION: [22, 14, 1, 0, 0, 0, 0],
            PROPERTIES: { SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.auto]), TYPE: "bullet" }
        }]
    };
    Class.drifterBody = {
    LABEL: "",
    CONTROLLERS: [["spin", { independent: true }]],
    COLOR: 9,
    SHAPE: 4,
    INDEPENDENT: true,
};
    Class.limpetBody = {
    LABEL: "",
    CONTROLLERS: [["spin", { independent: true }]],
    COLOR: 9,
    SHAPE: 5,
    INDEPENDENT: true,
};
    Class.megaAutoSmasherTurret = {
    PARENT: ["genericTank"],
    LABEL: "Turret",
    COLOR: 16,
    GUNS: [
        {
            POSITION: [20, 9, 1, 0, 5, 0, 0],
            PROPERTIES: {
                SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.power, g.morerecoil, g.morerecoil, g.turret, g.fast, g.fast, g.mach, g.pound, g.pound, g.morereload, g.morereload]),
                TYPE: "bullet",
                STAT_CALCULATOR: gunCalcNames.fixedReload,
            },
        },
        {
            POSITION: [20, 9, 1, 0, -5, 0, 0.5],
            PROPERTIES: {
                SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.power, g.morerecoil, g.morerecoil, g.turret, g.fast, g.fast, g.mach, g.pound, g.pound, g.morereload, g.morereload]),
                TYPE: "bullet",
                STAT_CALCULATOR: gunCalcNames.fixedReload,
            },
        },
    ],
};
    //bullets 

Class.sootherDrone = {
    PARENT: ["drone"],
    BODY: {HEALTH: base.HEALTH * 0.7,SPEED: base.SPEED * 0.75},
    HITS_OWN_TYPE: "normal",
    HEALER: true,
    TURRETS: [{
            POSITION: [13, 0, 0, 0, 360, 1],
            TYPE: "healerSymbol",},],
};
    Class.healerTrap = {
    PARENT: ["trap"],
    HEALER: true,
};


                    Class.landmine.UPGRADES_TIER_3 = ["limpet", "megaLandmine", "claymore", "autoLandmine", "decoy", "tripwire", "vessel"];
                    Class.banger.UPGRADES_TIER_3 = ["slammer", "megaBanger", "prick", "autoBanger", "tripwire", "thwacker", "sharper"];
                    Class.medic.UPGRADES_TIER_3 = ["medic", "ointment", "injection", "actuary"];
                                                      
};
